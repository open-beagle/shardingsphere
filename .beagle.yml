kind: pipeline
name: docker

trigger:
  branch:
    - dev-pengsong

volumes:
  - name: docker
    host:
      path: /var/run/docker.sock

workspace:
  path: /go/src/github.com/open-beagle/shardingsphere

clone:
  disable: true

steps:
  - name: s3-cache
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-s3-cache:1.0
    settings:
      restore: true
      mount:
        - ./.git
        - ./.repository
      endpoint: https://cache.wodcloud.com
      access_key:
        from_secret: ACCESS_KEY_MINIO
      secret_key:
        from_secret: SECRET_KEY_MINIO

  - name: fetch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
    settings:
      proxy:
        from_secret: SOCKS5_PROXY

#  - name: patch
#    image: registry.cn-qingdao.aliyuncs.com/wod/devops-git:1.0
#    commands:
#      - git apply .beagle/0001-sql-parse-mysql.patch

  - name: java
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-maven:3.8-openjdk-17
    commands:
      - cd $DRONE_WORKSPACE/shardingsphere-infra
      - mvn clean install -Prelease -Dmaven.test.skip=true -Dcheckstyle.skip=true -Drat.skip=true
      - cd $DRONE_WORKSPACE/shardingsphere-kernel/shardingsphere-transaction/shardingsphere-transaction-type/shardingsphere-transaction-xa/shardingsphere-transaction-xa-core
      - mvn clean install -Prelease -Dmaven.test.skip=true -Dcheckstyle.skip=true -Drat.skip=true
      - cd $DRONE_WORKSPACE/shardingsphere-test/shardingsphere-parser-test
      - mvn clean install -Prelease -Dmaven.test.skip=true -Dcheckstyle.skip=true -Drat.skip=true
      - cd $DRONE_WORKSPACE/shardingsphere-sql-parser/shardingsphere-sql-parser-dialect/shardingsphere-sql-parser-mysql
      - mvn clean install -Prelease -Dmaven.test.skip=true -Dcheckstyle.skip=true -Drat.skip=true
      - cd $DRONE_WORKSPACE/shardingsphere-sql-parser/shardingsphere-sql-parser-engine
      - mvn clean install -Prelease -Dmaven.test.skip=true -Dcheckstyle.skip=true -Drat.skip=true
      - cd $DRONE_WORKSPACE/shardingsphere-sql-parser/shardingsphere-sql-parser-statement
      - mvn clean install -Prelease -Dmaven.test.skip=true -Dcheckstyle.skip=true
      - cd $DRONE_WORKSPACE/shardingsphere-proxy
      - mvn clean install -Prelease -Dmaven.test.skip=true -Dcheckstyle.skip=true -Drat.skip=true
      - cd $DRONE_WORKSPACE/shardingsphere-distribution/shardingsphere-proxy-distribution
      - mvn clean install -Prelease -Dmaven.test.skip=true -Dcheckstyle.skip=true -Drat.skip=true
      - tar -xzvf target/apache-shardingsphere-5.1.2-shardingsphere-proxy-bin.tar.gz -C target/

  - name: curl
    image: registry.cn-qingdao.aliyuncs.com/wod/curl:alpine
    environment:
      MYSQL_CONNECTOR_VERSION: 5.1.49
    commands:
      - rm -rf .tmp
      - mkdir -p .tmp
      - curl https://cache.wodcloud.com/vscode/beagle/shardingsphere-proxy/mysql-connector-java-$MYSQL_CONNECTOR_VERSION.jar > .tmp/mysql-connector-java-$MYSQL_CONNECTOR_VERSION.jar

  - name: docker-amd64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod/openjdk:17-jdk-slim-amd64
      dockerfile: .beagle/dockerfile
      repo: wod/awecloud-dbproxy
      version: '1.0.1'
      channel: 'amd64'
      args: 'MYSQL_CONNECTOR_VERSION=5.1.49'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arm64
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker:1.0
    volumes:
      - name: docker
        path: /var/run/docker.sock
    settings:
      base: registry.cn-qingdao.aliyuncs.com/wod/openjdk:17-jdk-slim-arm64
      dockerfile: .beagle/dockerfile
      repo: wod/awecloud-dbproxy
      version: '1.0.1'
      channel: 'arm64'
      args: 'MYSQL_CONNECTOR_VERSION=5.1.49'
      registry: registry.cn-qingdao.aliyuncs.com
      registry_user:
        from_secret: REGISTRY_USER_ALIYUN
      registry_password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

  - name: docker-arch
    image: registry.cn-qingdao.aliyuncs.com/wod/devops-docker-manifest:1.0
    settings:
      platforms: linux/amd64,linux/arm64
      template: registry.cn-qingdao.aliyuncs.com/wod/awecloud-dbproxy:1.0.0-ARCH
      target: registry.cn-qingdao.aliyuncs.com/wod/awecloud-dbproxy:1.0.1
      username:
        from_secret: REGISTRY_USER_ALIYUN
      password:
        from_secret: REGISTRY_PASSWORD_ALIYUN

---
kind: secret
name: SOCKS5_PROXY
get:
  name: SOCKS5_PROXY
  path: devops-secrets

---
kind: secret
name: REGISTRY_USER_ALIYUN
get:
  name: REGISTRY_USER_ALIYUN
  path: devops-secrets

---
kind: secret
name: REGISTRY_PASSWORD_ALIYUN
get:
  name: REGISTRY_PASSWORD_ALIYUN
  path: devops-secrets

---
kind: secret
name: ACCESS_KEY_MINIO
get:
  name: ACCESS_KEY_MINIO
  path: devops-secrets

---
kind: secret
name: SECRET_KEY_MINIO
get:
  name: SECRET_KEY_MINIO
  path: devops-secrets